{"version":3,"sources":["component/Movies.js","component/App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","fetch","then","res","json","data","results","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","length","map","movie","Movies","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAoCeA,EA/BD,SAAC,GAAoD,IAC3CC,EADPC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAW7C,OACE,sBAAKC,UAAU,QAAf,UACGH,EACC,qBAAKI,IAhBK,mCAgBYJ,EAAaK,IAAKN,IAExC,qBAAKK,IAAI,eAAeC,IAAKN,IAE/B,sBAAKI,UAAU,aAAf,UACE,6BAAKJ,IACL,sBAAMI,UAAS,eAnBCL,EAmBqBI,EAlBrCJ,GAAQ,EACH,QACEA,GAAQ,EACV,SAEA,QAaL,SAAuDI,OAGzD,sBAAKC,UAAU,aAAf,UACE,2CACA,4BAAIF,WC0BGK,MAhDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA8BA,OA5BAC,qBAAU,WACRC,MAViB,+FAWdC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAUQ,EAAKC,cAEnB,IAuBA,qCACE,iCACE,sBAAMC,SArBW,SAACC,GACtBA,EAAEC,iBAECX,IACCG,MArBW,4FAqBQH,GACtBI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAUQ,EAAKC,YAEjBP,EAAc,MAYV,SACA,uBAAOW,KAAK,OAAOnB,UAAY,SAASoB,MAASb,EAAYc,YAAc,YAAYC,SARtE,SAACL,GACtBT,EAAcS,EAAEM,OAAOH,cAUvB,qBAAKpB,UAAY,kBAAjB,SACGK,EAAOmB,OAAS,GACfnB,EAAOoB,KAAI,SAACC,GAAD,OAAW,cAACC,EAAD,eAA2BD,GAAdA,EAAME,aCtChCC,EAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAhBO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ebf1f2ef.chunk.js","sourcesContent":["  \r\nimport React from \"react\";\r\n\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst Movie = ({ title, poster_path, overview, vote_average }) => {\r\n  const setVoteClass = (vote) => {\r\n    if (vote >= 8) {\r\n      return \"green\";\r\n    } else if (vote >= 6) {\r\n      return \"orange\";\r\n    } else {\r\n      return \"red\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie\">\r\n      {poster_path ? (\r\n        <img src={IMAGE_API + poster_path} alt={title} />\r\n      ) : (\r\n        <img src=\"no-cover.png\" alt={title} />\r\n      )}\r\n      <div className=\"movie-info\">\r\n        <h3>{title}</h3>\r\n        <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\r\n      </div>\r\n\r\n      <div className=\"movie-over\">\r\n        <h2>Overview:</h2>\r\n        <p>{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport Movies from \"./Movies\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?api_key=2a4b2e56eeb6920f63ebf821dd5c2582&query=\";\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?api_key=2a4b2e56eeb6920f63ebf821dd5c2582&query=\";\r\n\r\nfunction App() {\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(FEATURED_API)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMovies(data.results);\r\n      });\r\n  },[]);\r\n\r\n  \r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(searchTerm){\r\n        fetch(SEARCH_API + searchTerm)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      setMovies(data.results);\r\n    });\r\n    setSearchTerm('');\r\n    }\r\n\r\n};\r\n\r\n  const handleOnChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <form onSubmit={handleOnSubmit}>\r\n        <input type=\"text\" className = \"search\" value = {searchTerm} placeholder = \"Search...\" onChange={handleOnChange}/>\r\n        </form>\r\n      </header>\r\n    <div className = \"movie-container\">\r\n      {movies.length > 0 &&\r\n        movies.map((movie) => <Movies key={movie.id} {...movie} />)\r\n      }\r\n    </div>\r\n    </>\r\n  );\r\n};\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./component/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}